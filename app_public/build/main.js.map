{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/about/about.component.ts","./src/app/about/about.component.html","./src/app/app-routing/app-routing.module.ts","./src/app/app.module.ts","./src/app/authentication.service.ts","./src/app/details-page/details-page.component.ts","./src/app/details-page/details-page.component.html","./src/app/distance.pipe.ts","./src/app/framework/framework.component.ts","./src/app/framework/framework.component.html","./src/app/geolocation.service.ts","./src/app/history.service.ts","./src/app/home-list/home-list.component.ts","./src/app/home-list/home-list.component.html","./src/app/homepage/homepage.component.ts","./src/app/homepage/homepage.component.html","./src/app/html-line-breaks.pipe.ts","./src/app/loc8r-data.service.ts","./src/app/location-details/location-details.component.ts","./src/app/location-details/location-details.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/most-recent-first.pipe.ts","./src/app/pageheader/pageheader.component.ts","./src/app/pageheader/pageheader.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/sidebar/sidebar.component.ts","./src/app/sidebar/sidebar.component.html","./src/app/storage.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  public pageContent = {\n    header: {\n      title: 'About Loc8r',\n      strapline: ''\n    },\n    content: 'Loc8r was created to help people find places to sit down and get a bit of work done.\\n\\n Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\\'s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\\n\\n Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin professor at Hampden-Sydney College in Virginia, looked up one of the more obscure Latin words, consectetur, from a Lorem Ipsum passage, and going through the cites of the word in classical literature, discovered the undoubtable source. Lorem Ipsum comes from sections 1.10.32 and 1.10.33 of \\\"de Finibus Bonorum et Malorum\\\" (The Extremes of Good and Evil) by Cicero, written in 45 BC. This book is a treatise on the theory of ethics, very popular during the Renaissance. The first line of Lorem Ipsum, \\\"Lorem ipsum dolor sit amet..\\\", comes from a line in section 1.10.32.\\n\\n'\n  }\n\n}\n","<app-pageheader [content]='pageContent.header'></app-pageheader>\n<div class=\"col-12 col-lg-8\" [innerHTML]='pageContent.content|htmlLineBreaks'>\n    <hr>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomepageComponent } from '../homepage/homepage.component';\nimport { AboutComponent } from '../about/about.component';\nimport { DetailsPageComponent } from '../details-page/details-page.component';\nimport { RegisterComponent } from '../register/register.component';\nimport { LoginComponent } from '../login/login.component';\n\n\nconst routes: Routes = [{\n  path: '',\n  component: HomepageComponent\n}, {\n  path: 'about',\n  component: AboutComponent\n}, {\n  path: 'location/:locationid',\n  component: DetailsPageComponent\n}, {\n  path: 'register',\n  component: RegisterComponent\n}, {\n  path: 'login',\n  component: LoginComponent\n}\n]\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forRoot(routes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class AppRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { HomeListComponent } from './home-list/home-list.component';\nimport { DistancePipe } from './distance.pipe';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FrameworkComponent } from './framework/framework.component';\nimport { AboutComponent } from './about/about.component';\nimport { HomepageComponent } from './homepage/homepage.component';\nimport { PageheaderComponent } from './pageheader/pageheader.component';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { HtmlLineBreaksPipe } from './html-line-breaks.pipe';\nimport { LocationDetailsComponent } from './location-details/location-details.component';\nimport { DetailsPageComponent } from './details-page/details-page.component';\nimport { MostRecentFirstPipe } from './most-recent-first.pipe';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing/app-routing.module';\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\n\n@NgModule({\n  declarations: [\n    HomeListComponent,\n    DistancePipe,\n    FrameworkComponent,\n    AboutComponent,\n    HomepageComponent,\n    PageheaderComponent,\n    SidebarComponent,\n    HtmlLineBreaksPipe,\n    LocationDetailsComponent,\n    DetailsPageComponent,\n    MostRecentFirstPipe,\n    RegisterComponent,\n    LoginComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [FrameworkComponent]\n})\nexport class AppModule { }\n","import { Inject, Injectable } from '@angular/core';\nimport { Authresponse } from './authresponse';\nimport { Loc8rDataService } from './loc8r-data.service';\nimport { BROWSER_STORAGE } from './storage';\nimport { User } from './user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  constructor(@Inject(BROWSER_STORAGE) private storage: Storage,\n    private loc8rDataService: Loc8rDataService\n  ) { }\n\n\n  public getToken(): string {\n    return this.storage.getItem('loc8r-token');\n  }\n  public saveToken(token: string): void {\n    this.storage.setItem('loc8r-token', token);\n  }\n\n  public login(user: User): Promise<any> {\n    return this.loc8rDataService.login(user).then((authResp: Authresponse) => {\n      this.saveToken(authResp.token)\n    });\n  }\n\n  public register(user: User): Promise<any> {\n    return this.loc8rDataService.register(user).then((authResp: Authresponse) => this.saveToken(authResp.token));\n  }\n\n  public logout(): void {\n    this.storage.removeItem('loc8r-token');\n  }\n\n  public isLoggedIn(): boolean {\n    const token = this.getToken();\n    if (!token)\n      return false;\n    const payload = JSON.parse(atob(token.split('.')[1]));\n\n    return payload.exp > (Date.now() / 1000);\n  }\n\n  public getCurrentUser(): User {\n    if (this.isLoggedIn()) {\n      const token: string = this.getToken();\n      const { email, name } = JSON.parse(atob(token.split('.')[1]));\n      return { email, name } as User;\n    }\n    return undefined;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, ParamMap } from '@angular/router';\nimport { Loc8rDataService } from '../loc8r-data.service';\nimport { switchMap } from 'rxjs/operators'\nimport { Location } from '../location';\n\n@Component({\n  selector: 'app-details-page',\n  templateUrl: './details-page.component.html',\n  styleUrls: ['./details-page.component.css']\n})\nexport class DetailsPageComponent implements OnInit {\n\n  constructor(private loc8rDataService: Loc8rDataService, private route: ActivatedRoute) { }\n\n  newLocation: Location;\n\n  ngOnInit(): void {\n    this.route.paramMap.pipe(switchMap((params: ParamMap) => {\n      let id = params.get('locationid');\n      return this.loc8rDataService.getLocationById(id);\n    })).subscribe((newLocation: Location) => {\n      this.newLocation = newLocation;\n      this.pageContent.header.title = newLocation.name;\n      this.pageContent.sidebar = `${newLocation.name} is on Loc8r because it has accessible wifi and space to sit down with your laptop and get some work done.\\n\\n\\nIf you\\'ve been and like it - or if you don\\'t - please leave a review to help other people just like you.`;\n    });\n  }\n\n  public pageContent = {\n    header: {\n      title: '',\n      strapline: ''\n    },\n    sidebar: ''\n  }\n\n}\n","<app-pageheader [content]='pageContent.header'></app-pageheader>\n<div class=\"row\">\n    <div class=\"col-12 col-md-8\">\n        <app-location-details class=\"col-12 col-lg-9\" *ngIf='newLocation' [location]='newLocation'>\n        </app-location-details>\n    </div>\n    <app-sidebar class=\"col-12 col-md-4\" [content]='pageContent.sidebar'></app-sidebar>\n</div>","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'distance'\n})\nexport class DistancePipe implements PipeTransform {\n\n  transform(distance: number): string {\n    const isNumeric = function (n) {\n      return !isNaN(parseFloat(n)) && isFinite(n);\n    }\n\n    if (distance && isNumeric(distance)) {\n      let thisDistance = '0';\n      let unit = 'm';\n      if (distance > 1000) {\n        thisDistance = (distance / 1000).toFixed(1);\n        unit = 'km';\n      } else {\n        thisDistance = Math.floor(distance).toString();\n      }\n      return thisDistance + unit;\n    }\n    return '?';\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../authentication.service';\nimport { HistoryService } from '../history.service';\n\n@Component({\n  selector: 'app-framework',\n  templateUrl: './framework.component.html',\n  styleUrls: ['./framework.component.css']\n})\nexport class FrameworkComponent implements OnInit {\n\n  constructor(\n    private authenticationService: AuthenticationService,\n    private historyService:HistoryService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  public doLogout(): void {\n    this.authenticationService.logout();\n  }\n\n  public isLoggedIn(): boolean {\n    return this.authenticationService.isLoggedIn();\n  }\n  public getUsername(): string {\n    const user = this.authenticationService.getCurrentUser();\n    return user ? user.name : 'Guest';\n  }\n\n}\n","<nav class=\"navbar fixed-top navbar-expand-md navbar-dark\">\n    <div class=\"container\">\n        <a class=\"navbar-brand\" routerLink=\"/\">Loc8r</a>\n        <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarMain\">\n            <span class=\"navbar-toggler-icon\"> </span>\n        </button>\n        <div class=\"navbar-collapse collapse\" id=\"navbarMain\">\n            <ul class=\"navbar-nav mr-auto\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"about\">About</a>\n                </li>\n            </ul>\n            <span class=\"navbar-nav justify-content-end\">\n                <li class=\"nav-item\" routerLinkActive='active'>\n                    <a routerLink='login' class=\"nav-link\" *ngIf='!isLoggedIn()'>\n                        Sign In\n                    </a>\n                </li>\n                <li class=\"nav-item dropdown\" routerLinkActive='active' *ngIf='isLoggedIn()'>\n                    <a class=\"nav-link dropdown-toggle\" data-bs-toggle=\"dropdown\">\n                        {{getUsername()}}\n                    </a>\n                    <div class=\"dropdown-menu\">\n                        <a class=\"dropdown-item\" (click)='doLogout()'>\n                            Logout\n                        </a>\n                    </div>\n                </li>\n            </span>\n        </div>\n    </div>\n</nav>\n<div class=\"container content\">\n    <router-outlet></router-outlet>\n    <footer>\n        <div class=\"row\">\n            <div class=\"col-12\"><small>© Property of Qwerty Aswal</small></div>\n        </div>\n    </footer>\n</div>","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GeolocationService {\n\n  constructor() { }\n\n  public getPosition(cbSuccess, cbError, cbNoGeo): void {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(cbSuccess, cbError);\n    }\n    else {\n      cbNoGeo();\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { filter } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HistoryService {\n  private urls: string[] = [];\n  constructor(private router: Router) {\n    this.router.events\n      .pipe(filter(routerEvent => routerEvent instanceof NavigationEnd))\n      .subscribe((routerEvent: NavigationEnd) => {\n        const url = routerEvent.urlAfterRedirects;\n        this.urls = [...this.urls, url];\n      })\n  }\n\n  public previousUrl(): string {\n    const length = this.urls.length;\n    return length > 1 ? this.urls[length - 2] : '/';\n  }\n\n  public getLastNonLoginUrl(): string {\n    const exclude: string[] = ['/login', '/register'];\n    const filtered = this.urls.filter(url => !exclude.includes(url));\n    const length = filtered.length;\n    return length > 0 ? filtered[length - 1] : '/';\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { GeolocationService } from '../geolocation.service';\nimport { Loc8rDataService } from '../loc8r-data.service';\nimport { Location } from '../location';\n\n\n@Component({\n  selector: 'app-home-list',\n  templateUrl: './home-list.component.html',\n  styleUrls: ['./home-list.component.css']\n})\nexport class HomeListComponent implements OnInit {\n  constructor(private loc8rDataService: Loc8rDataService, private geolocationService: GeolocationService) { }\n  public locations: Location[];\n  public message: string;\n\n  private getLocations(position: any): void {\n    this.message = 'Searching For Places Nearby';\n    const lat = position.coords.latitude;\n    const lng = position.coords.longitude;\n    this.loc8rDataService.getLocations(lat, lng).then(foundLocations => {\n      this.message = foundLocations.length > 0 ? '' : 'No Locations Found';\n      this.locations = foundLocations;\n    });\n  }\n\n  private showError(error: any): void {\n    this.message = error.message;\n  }\n\n  private noGeo(): void {\n    this.message = 'GeoLocation not supported by by browser';\n  }\n\n  private getPosition(): void {\n    this.message = 'Getting your location...';\n    this.geolocationService.getPosition(this.getLocations.bind(this), this.showError.bind(this), this.noGeo.bind(this));\n  }\n\n  ngOnInit(): void {\n    this.getPosition();\n  }\n\n}\n","<div class=\"error\">{{message}}</div>\n<div class=\"row\" *ngFor='let location of locations'>\n    <div class=\"card\">\n        <div class=\"card-block\">\n            <h4>\n                <a routerLink=\"/location/{{location._id}}\">{{location.name}}</a>\n                <small>&nbsp;\n                    <i class=\"fa{{ location.rating < 1 ? 'r':'s' }} fa-star\"></i>\n                    <i class=\"fa{{ location.rating < 2 ? 'r':'s' }} fa-star\"></i>\n                    <i class=\"fa{{ location.rating < 3 ? 'r':'s' }} fa-star\"></i>\n                    <i class=\"fa{{ location.rating < 4 ? 'r':'s' }} fa-star\"></i>\n                    <i class=\"fa{{ location.rating < 5 ? 'r':'s' }} fa-star\"></i>\n                </small>\n                <span class=\"badge badge-pill badge-default float-end\">{{location.distance|distance}}</span>\n            </h4>\n            <p class=\"address\">{{location.address | uppercase}}</p>\n            <p class=\"facilities\">\n                <span *ngFor='let facility of location.facilities' class=\"badge badge-warning\">\n                    {{facility}}\n                </span>\n            </p>\n        </div>\n    </div>\n    <p></p>\n    <hr>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-homepage',\n  templateUrl: './homepage.component.html',\n  styleUrls: ['./homepage.component.css']\n})\nexport class HomepageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  public pageContent = {\n    header: {\n      title: 'Loc8r',\n      strapline: 'find places to with with wifi near you!'\n    },\n    sidebar: 'Looking for wifi and seat? Loc8r helps you find places to work when out and about. Perhaps with coffee, cake or a pint? Let Loc8r help you find the place youare looking for.'\n  }\n\n}\n","<app-pageheader [content]=\"pageContent.header\"></app-pageheader>\n<div class=\"row\">\n    <div class=\"col-12 col-md-8\">\n        <app-home-list></app-home-list>\n    </div>\n    <app-sidebar class=\"col-12 col-md-4\" [content]='pageContent.sidebar'></app-sidebar>\n</div>","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'htmlLineBreaks'\n})\nexport class HtmlLineBreaksPipe implements PipeTransform {\n\n  transform(value: string): string {\n    return value.replace(/\\n/g, '<br/>');\n  }\n\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpClientModule } from '@angular/common/http';\n\nimport { Location, Review } from './location';\nimport { User } from './user';\nimport { Authresponse } from './authresponse';\nimport { BROWSER_STORAGE } from './storage';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class Loc8rDataService {\n\n  constructor(private http: HttpClient,\n    @Inject(BROWSER_STORAGE) private storage: Storage\n  ) { }\n\n  private apiBaseUrl = 'http://localhost:3000/api';\n\n  public getLocations(lat: number, lng: number): Promise<Location[]> {\n\n    // const lng: number = 72.3;\n    // const lat: number = 18.1;\n    const maxDistance: number = 200000;\n    const url: string = `${this.apiBaseUrl}/locations?lng=${lng}&lat=${lat}&maxDis=${maxDistance}`;\n    return this.http.get(url).toPromise().then(response => response as Location[]).catch(this.handleError);\n  }\n\n  public getLocationById(locationid: string): Promise<Location> {\n    const url = `${this.apiBaseUrl}/locations/${locationid}`;\n    return this.http.get(url).toPromise().then(response => response as Location).catch(this.handleError);\n  }\n\n  public addReviewById(locationid: string, formdata: Review): Promise<Review> {\n    const url: string = `${this.apiBaseUrl}/locations/${locationid}/reviews`;\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Authorization': `Bearer ${this.storage.getItem('loc8r-token')}`\n      })\n    };\n    return this.http.post(url, formdata, httpOptions).toPromise().then(response => response as Review).catch(this.handleError);\n  }\n\n  private handleError(error: any): Promise<any> {\n    console.error('Something has gone wrong:', error);\n    return Promise.reject(error.message || error);\n  }\n\n\n  public login(user: User): Promise<Authresponse> {\n    return this.makeAuthApiCall('login', user).then(response => response as Authresponse);\n  }\n\n  public register(user: User): Promise<Authresponse> {\n    return this.makeAuthApiCall('register', user);\n  }\n\n  private makeAuthApiCall(urlPath: string, user: User): Promise<Authresponse> {\n    const url: string = `${this.apiBaseUrl}/${urlPath}`;\n    return this.http.post(url, user).toPromise().then(response => response as Authresponse).catch(this.handleError);\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../authentication.service';\nimport { Loc8rDataService } from '../loc8r-data.service';\nimport { Location, Review } from '../location';\n\n@Component({\n  selector: 'app-location-details',\n  templateUrl: './location-details.component.html',\n  styleUrls: ['./location-details.component.css']\n})\nexport class LocationDetailsComponent implements OnInit {\n\n  @Input() location: Location\n\n  constructor(private loc8rService: Loc8rDataService,\n    private authenticationService: AuthenticationService\n  ) { }\n\n  public formVisible: boolean = false;\n\n  public review: Review = {\n    author: '',\n    rating: 5,\n    reviewText: ''\n  };\n\n  public formError: string;\n\n  private formIsValid(): boolean {\n    if (this.review.author && this.review.rating && this.review.reviewText)\n      return true;\n    return false;\n  }\n\n  private resetAndHideForm(): void {\n    this.formVisible = false;\n    this.review.author = '';\n    this.review.rating = 5;\n    this.review.reviewText = '';\n    this.formError = '';\n  }\n\n  public onReviewSubmit(): void {\n    this.formError = '';\n    this.review.author = this.getUsername();\n    if (this.formIsValid()) {\n      this.loc8rService.addReviewById(this.location._id, this.review)\n        .then((review: Review) => {\n          let reviews = this.location.reviews.slice(0);\n          reviews.unshift(review);\n          this.location.reviews = reviews;\n          this.resetAndHideForm();\n        });\n    }\n    else {\n      this.formError = 'All fields are required. Please try again.'\n    }\n  }\n  public isLoggedIn(): boolean {\n    return this.authenticationService.isLoggedIn();\n  }\n\n  public getUsername(): string {\n    const { name } = this.authenticationService.getCurrentUser();\n    return name ? name : 'Guest';\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n    <div class=\"row\">\n        <div class=\"col-12 col-md-6\">\n            <p class=\"rating\">\n                <i class=\"fa{{location.rating<1?'r':'s'}} fa-star\"></i>\n                <i class=\"fa{{location.rating<2?'r':'s'}} fa-star\"></i>\n                <i class=\"fa{{location.rating<3?'r':'s'}} fa-star\"></i>\n                <i class=\"fa{{location.rating<4?'r':'s'}} fa-star\"></i>\n                <i class=\"fa{{location.rating<5?'r':'s'}} fa-star\"></i>\n            </p>\n            <p>{{location.address}}</p>\n            <div class=\"card card-primary\">\n                <div class=\"card-block\">\n                    <h2 class=\"card-title\">Opening Hours</h2>\n                    <p class=\"card-text\" *ngFor='let openingTime of location.openingTimes'\n                        [ngSwitch]='openingTime.closed'>\n                        <span *ngSwitchCase='true'>Closed</span>\n                        <span *ngSwitchDefault>{{openingTime.days}}:\n                            {{openingTime.opening}}-{{openingTime.closing}}\n                        </span>\n                    </p>\n                </div>\n            </div>\n            <div class=\"card card-primary\">\n                <div class=\"card-block\">\n                    <h2 class=\"card-title\">Facilities</h2>\n                    <span class=\"badge badge-warning\" *ngFor='let facility of location.facilities'>\n                        <i class=\"fa fa-check\">&nbsp;{{facility}}&nbsp;</i>\n                    </span>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-12 col-md-6 location-map\">\n            <div class=\"card card-primary\">\n                <div class=\"card-block\">\n                    <h2 class=\"card-title\">Location Map </h2><img class=\"img-fluid rounded\"\n                        src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQJgjG37yPyDwQfFDMpErxeMJD-UITAkie7Lg&amp;usqp=CAU\">\n                </div>\n            </div>\n        </div>\n    </div>\n    <hr>\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <div class=\"card card-primary review-card\">\n                <div class=\"card-block\" [ngSwitch]='isLoggedIn()'>\n                    <button (click)='formVisible=true' class=\"btn btn-primary float-end\" *ngSwitchCase='true'>\n                        Add Review\n                    </button>\n                    <a routerLink='/login' class=\"btn btn-primary float-end\" *ngSwitchDefault>Log in to write review</a>\n                    <h2 class=\"card-title\">Customer Reviews </h2>\n                    <!--  -->\n                    <div class=\"container\" *ngIf='formVisible'>\n                        <form action=\"\" (ngSubmit)='onReviewSubmit()'>\n                            <hr>\n                            <h4>Add Your Reviews </h4>\n                            <div *ngIf='formError' class=\"alert alert-danger\" role=\"alert\">\n                                {{formError}}\n                            </div>\n                            <div class=\"form-group row\">\n                                <label class=\"col-sm-2 col-form-label\" for=\"rating\">\n                                    Rating\n                                </label>\n                                <div class=\"col-md-2 col-sm-10\">\n                                    <select [(ngModel)]='review.rating' class=\"form-control input-sm\" id=\"rating\"\n                                        name=\"rating\">\n                                        <option [ngValue]='5'>5</option>\n                                        <option [ngValue]='4'>4</option>\n                                        <option [ngValue]='3'>3</option>\n                                        <option [ngValue]='2'>2</option>\n                                        <option [ngValue]='1'>1</option>\n                                    </select>\n                                </div>\n                            </div>\n                            <p></p>\n                            <div class=\"form-group row\">\n                                <label class=\"col-sm-2 col-form-label\" for=\"review\">\n                                    Review\n                                </label>\n                                <div class=\"col-sm-10\">\n                                    <textarea [(ngModel)]='review.reviewText    ' class=\"form-control\" id=\"revew\"\n                                        name=\"review\" rows=\"5\"></textarea>\n                                </div>\n                            </div>\n                            <p></p>\n                            <div class=\"form-group row\">\n                                <div class=\"col-12\">\n                                    <button type=\"submit\" class=\"btn btn-primary float-end\" style=\"margin-left: 15px;\">\n                                        Submit review\n                                    </button>\n                                    <button type=\"button\" (click)='formVisible=false;formError=undefined'\n                                        class=\"btn btn-dark float-end\">Cancel</button>\n                                </div>\n                            </div>\n                            <hr>\n                        </form>\n\n                    </div>\n                    <!--  -->\n                    <div class=\"row review\" *ngFor='let review of location.reviews|mostRecentFirst'>\n                        <div class=\"col-12 no-gutters review-header\">\n                            <span class=\"rating\">\n                                <i class=\"fa{{review.rating<1?'r':'s'}} fa-star\"></i>\n                                <i class=\"fa{{review.rating<2?'r':'s'}} fa-star\"></i>\n                                <i class=\"fa{{review.rating<3?'r':'s'}} fa-star\"></i>\n                                <i class=\"fa{{review.rating<4?'r':'s'}} fa-star\"></i>\n                                <i class=\"fa{{review.rating<5?'r':'s'}} fa-star\"></i>\n                            </span>\n                            <span class=\"float-end\">\n                                &nbsp;&nbsp;&nbsp;\n                                <span>{{review.author}}</span>\n                                <span>\n                                    <small>\n                                        &nbsp;&nbsp;&nbsp;{{review.createdOn | date: 'd MMMM yyyy'}}\n                                    </small>\n                                </span>\n                            </span>\n                        </div>\n                        <div class=\"col-12\">\n                            <p [innerHTML]='review.reviewText | htmlLineBreaks'></p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '../authentication.service';\nimport { HistoryService } from '../history.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n\n  constructor(private router: Router,\n    private authenticationService: AuthenticationService,\n    private historyService: HistoryService\n  ) { }\n\n  public pageContent = {\n    header: {\n      title: 'Sign in to loc8r',\n      strapline: ''\n    },\n    sidebar: ''\n  }\n\n  public formError: string = '';\n\n  public credentials = {\n    name: '',\n    email: '',\n    password: ''\n  };\n\n  public onLoginSubmit(): void {\n    this.formError = '';\n    if (!this.credentials.email || !this.credentials.password)\n      this.formError = 'All fields are required, please try again';\n    else {\n      this.doLogin();\n    }\n  }\n\n  private doLogin(): void {\n    this.authenticationService.login(this.credentials)\n      .then(() => this.router.navigateByUrl(this.historyService.getLastNonLoginUrl()))\n      .catch((message) => this.formError = message);\n  }\n\n  ngOnInit(): void {\n  }\n\n\n}\n","<app-pageheader [content]='pageContent.header'> </app-pageheader>\n<div class=\"row\">\n    <div class=\"col-12 col-md-8\">\n        <p class=\"lead\">Not a member? Please <a routerLink='/register'>register</a> instead</p>\n        <form (submit)='onLoginSubmit()'>\n            <div role=\"alert\" *ngIf='formError' class=\"alert alert-danger\">\n                {{formError}}\n            </div>\n            <br>\n            <div class=\"form-group row\">\n                <label class=\"col-sm-2 col-form-label\" for=\"email\">Email :</label>\n                <div class=\"col-sm-10 \">\n                    <input class=\"form-control\" id='email' name='email' placeholder=\"Enter your email\"\n                        [(ngModel)]='credentials.email'>\n                </div>\n            </div>\n            <br>\n            <div class=\"form-group row\">\n                <label class=\"col-sm-2 col-form-label\" for=\"password\">Password :</label>\n                <div class=\"col-sm-10 \">\n                    <input class=\"form-control\" type=\"password\" id='password' name='password'\n                        placeholder=\"Enter your password\" [(ngModel)]='credentials.password'>\n                </div>\n            </div>\n            <br>\n            <hr>\n            <button type=\"submit\" role=\"button\" class=\"btn btn-primary\">\n                Sign In!\n            </button>\n            <br>\n            <br>\n        </form>\n    </div>\n\n    <app-sidebar class=\"col-12 col-md-4\" [content]='pageContent.sidebar'></app-sidebar>\n</div>","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'mostRecentFirst'\n})\nexport class MostRecentFirstPipe implements PipeTransform {\n\n  private compare(a, b) {\n    const createdOnA = a.createdOn;\n    const createdOnB = b.createdOn;\n\n    let comparision = 1;\n    if (createdOnA > createdOnB)\n      comparision = -1;\n    return comparision;\n  }\n  transform(value: any[]): any[] {\n    if (value && value.length > 0)\n      return value.sort(this.compare);\n    return null;\n  }\n\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pageheader',\n  templateUrl: './pageheader.component.html',\n  styleUrls: ['./pageheader.component.css']\n})\nexport class PageheaderComponent implements OnInit {\n\n  @Input() content: any;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row banner\">\n    <div class=\"col-12\">\n        <h1>{{content.title}}<small>&nbsp;{{content.strapline}}</small></h1>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '../authentication.service';\nimport { HistoryService } from '../history.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(private router: Router,\n    private authenticationService: AuthenticationService,\n    private historyService: HistoryService\n  ) { }\n\n  public pageContent = {\n    header: {\n      title: 'Create New Account',\n      strapline: ''\n    },\n    sidebar: ''\n  }\n\n  public formError: string = '';\n\n  public credentials = {\n    name: '',\n    email: '',\n    password: ''\n  };\n\n  public onRegisterSubmit(): void {\n    this.formError = '';\n    if (!this.credentials.name || !this.credentials.email || !this.credentials.password)\n      this.formError = 'All fields are required, please try again';\n    else {\n      this.doRegister();\n    }\n  }\n\n  private doRegister(): void {\n    this.authenticationService.register(this.credentials)\n      .then(() => this.router.navigateByUrl(this.historyService.getLastNonLoginUrl()))\n      .catch((message) => this.formError = message);\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-pageheader [content]='pageContent.header'> </app-pageheader>\n<div class=\"row\">\n    <div class=\"col-12 col-md-8\">\n        <p class=\"lead\">Already a member? Please <a routerLink='/login'>log in</a> instead</p>\n        <form (submit)='onRegisterSubmit()'>\n            <div role=\"alert\" *ngIf='formError' class=\"alert alert-danger\">\n                {{formError}}\n            </div>\n            <br>\n            <div class=\"form-group row\">\n                <label class=\"col-sm-2 col-form-label\" for=\"name\">Name :</label>\n                <div class=\"col-sm-10 \">\n                    <input class=\"form-control\" id='name' name='name' placeholder=\"Enter your name\"\n                        [(ngModel)]='credentials.name'>\n                </div>\n            </div>\n            <br>\n            <div class=\"form-group row\">\n                <label class=\"col-sm-2 col-form-label\" for=\"email\">Email :</label>\n                <div class=\"col-sm-10 \">\n                    <input class=\"form-control\" id='email' name='email' placeholder=\"Enter your email\"\n                        [(ngModel)]='credentials.email'>\n                </div>\n            </div>\n            <br>\n            <div class=\"form-group row\">\n                <label class=\"col-sm-2 col-form-label\" for=\"password\">Password :</label>\n                <div class=\"col-sm-10 \">\n                    <input class=\"form-control\" type=\"password\" id='password' name='password'\n                        placeholder=\"Enter your password\" [(ngModel)]='credentials.password'>\n                </div>\n            </div>\n            <br>\n            <hr>\n            <button type=\"submit\" role=\"button\" class=\"btn btn-primary\">\n                Register!\n            </button>\n            <br>\n            <br>\n        </form>\n    </div>\n    <app-sidebar class=\"col-12 col-md-4\" [content]='pageContent.sidebar'></app-sidebar>\n</div>","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n\n  @Input() content: any\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n    <p class=\"lead\">{{content}}</p>\n</div>","import { InjectionToken } from \"@angular/core\";\n\nexport const BROWSER_STORAGE = new InjectionToken<Storage>('Browser Storage', {\n    providedIn: 'root',\n    factory: () => localStorage\n});","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}